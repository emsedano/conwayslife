{"name":"Conwayslife","tagline":"Conway's life implementation","body":"conwayslife\r\n===========\r\n\r\nConway's life implementation\r\n\r\nThe Game of Life is not your typical computer game. It is a 'cellular automaton', and was invented by Cambridge mathematician John Conway.\r\n\r\nThe Rules\r\nFor a space that is 'populated':\r\n\r\n    Each cell with one or no neighbors dies, as if by loneliness.\r\n    Each cell with four or more neighbors dies, as if by overpopulation.\r\n    Each cell with two or three neighbors survives.\r\n\r\nFor a space that is 'empty' or 'unpopulated'\r\n\r\n    Each cell with three neighbors becomes populated.\r\n    \r\nWhatch live [Demo](http://jsfiddle.net/emsedano/4835jcnm/7/ \"Live demo\")\r\n                   \r\n\r\n ```\r\nfunction Cell(x, y, populated){\r\n\tthis.px = x;\r\n\tthis.py = y;\r\n\tthis.isGoner = false;\r\n\tthis.isPregned = false;\r\n\r\n\r\n\tif(populated)\r\n\t\tthis.populated = populated;\r\n\telse\r\n\t\tthis.populated = false;\r\n}\r\n\r\nCell.prototype.setPopulate = function (val){\r\n\tthis.populated = val;\r\n}\r\n\r\nCell.prototype.isPopulated = function(){\r\n\treturn this.populated;\r\n};\r\n\r\nCell.prototype.willDie = function(){\r\n\tthis.isGoner = true;\r\n\tthis.isPregned = false;\r\n};\r\n\r\nCell.prototype.resetState = function(){\r\n\tthis.isGoner = false;\r\n\tthis.isPregned = false;\r\n};\r\n\r\nCell.prototype.fertilize = function(){\r\n\tthis.isGoner = false;\r\n\tthis.isPregned = true;\r\n};\r\n\r\n\r\n\r\n\r\n\r\nfunction Environment(w, h, target){\r\n\tthis.target = $(target);\r\n\tthis.w = w;\r\n\tthis.h = h;\r\n\r\n\tthis.fields = new Array(w);\r\n\r\n\tfor (var i = 0; i < w; i++) {\r\n   \tthis.fields[i] = new Array(h); //define cada elemento como una matriz de longitud w\r\n   \tfor (var j = 0; j < h; j++) {\r\n      this.fields[i][j] = new Cell(i, j); //asigna a cada elemento de la matriz bidimensional \r\n                                         //los valores de i y j\r\n   \t}\r\n\t}\r\n}\r\n\r\nEnvironment.prototype.NORTH = 'N';\r\nEnvironment.prototype.NOREAST = 'NE';\r\nEnvironment.prototype.NORWEST = 'NW';\r\nEnvironment.prototype.SOUTH = 'S';\r\nEnvironment.prototype.SOUTHEAST = 'SE';\r\nEnvironment.prototype.SOUTHWEST = 'SW';\r\nEnvironment.prototype.EAST = 'E';\r\nEnvironment.prototype.WEST = 'W';// DEFAULT\r\n\r\nEnvironment.prototype.init = function(){\r\n\t\r\n\tvar tr = \"\";\r\n\tvar td =\"\"\r\n\tvar css = \"\";\r\n\tfor(i = 0; i < this.w; i++){\r\n\t\ttr= \"<tr id='row_\"+i+\"'>\";\r\n\t\ttd =\"\";\r\n\t\tfor(j = 0; j < this.h; j++){\r\n\t\t\tcss = \"\";\r\n\t\t\tif(this.getCell(i, j) != null && this.getCell(i, j).isPopulated())\r\n\t\t\t\tcss = \"alive\"\r\n\t\t\ttd+=\"<td class='\"+css+\"' ondblclick='ConwaysLifeGame.togglePopulated(\"+i+\",\"+j+\");'></td>\"\r\n\r\n\t\t}\r\n\t\ttr+=td;\r\n\t\ttr+=\"</tr>\";\r\n\t\tthis.target.append(tr);\r\n\t}\r\n};\r\n\r\nEnvironment.prototype.refreshEnvironment = function(){\r\n\tthis.target.html(\"\");\r\n\tthis.init();\r\n};\r\n\r\nEnvironment.prototype.setCell = function(Cell){\r\n\tif(this.fields[Cell.px][Cell.py] == null)\r\n\t\tthis.fields[Cell.px][Cell.py] = Cell;\r\n};\r\n\r\nEnvironment.prototype.getCell = function(x, y){\r\n\treturn this.fields[x][y];\r\n};\r\n\r\nEnvironment.prototype.hasNeighborAt = function(Cell, DIR){\r\n\t\r\n\tvar neighborgCell = this.doesCellExist(Cell, DIR);\r\n\t\r\n\tif (neighborgCell)\r\n\t\treturn neighborgCell.isPopulated();\r\n\t\r\n\treturn false;\r\n\t\r\n};\r\n\r\nEnvironment.prototype.doesCellExist = function(Cell, DIR){\r\n\t\r\n\tif(Cell){\r\n\r\n\t\tif (DIR === this.NORTH && Cell.px > 0) {\r\n\t\t\t//NORTH\r\n\t\t\treturn this.getCell(Cell.px -1, Cell.py);\r\n\r\n\t\t}else if (DIR === this.SOUTH && Cell.px < this.h - 1) {\r\n\t\t\t//SOUTH\r\n\t\t\treturn this.getCell(Cell.px + 1, Cell.py );\r\n\r\n\t\t}else if (DIR === this.EAST && Cell.py < this.w - 1) {\r\n\t\t\t//EAST\r\n\t\t\treturn this.getCell(Cell.px, Cell.py + 1 );\r\n\r\n\t\t}else if (DIR === this.WEST && Cell.py > 0) {/// West default\r\n\t\t\t//WEST\r\n\t\t\treturn this.getCell( Cell.px, Cell.py - 1);\r\n\r\n\t\t}else if(DIR === this.NOREAST) {\r\n\t\t\t//NOREAST\r\n\t\t\treturn this.doesCellExist(this.doesCellExist(Cell, this.NORTH), this.EAST);\r\n\r\n\t\t}else if(DIR === this.NORWEST ){\r\n\t\t\t//NORWEST\r\n\t\t\treturn this.doesCellExist(this.doesCellExist(Cell, this.NORTH), this.WEST);\r\n\r\n\t\t}else if(DIR === this.SOUTHEAST ) {\r\n\t\t\t//SOUTHEAST\r\n\t\t\treturn this.doesCellExist(this.doesCellExist(Cell, this.SOUTH), this.EAST);\r\n\r\n\t\t}else if(DIR === this.SOUTHWEST ) {  \r\n\t\t\t//SOUTHWEST\r\n\t\t\treturn this.doesCellExist(this.doesCellExist(Cell, this.SOUTH), this.WEST) ;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t}else{\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t\t\r\n};\r\n\r\nEnvironment.prototype.countNeighbors = function(Cell){\r\n\tvar neighborgs = 0;\r\n\tif (this.hasNeighborAt(Cell, this.NORTH))\r\n\t\tneighborgs++;\r\n\tif (this.hasNeighborAt(Cell, this.NOREAST))\r\n\t\tneighborgs++;\r\n\tif (this.hasNeighborAt(Cell, this.NORWEST))\r\n\t\tneighborgs++;\r\n\tif (this.hasNeighborAt(Cell, this.SOUTH))\r\n\t\tneighborgs++;\r\n\tif (this.hasNeighborAt(Cell, this.SOUTHEAST))\r\n\t\tneighborgs++;\r\n\tif (this.hasNeighborAt(Cell, this.SOUTHWEST))\r\n\t\tneighborgs++;\r\n\tif (this.hasNeighborAt(Cell, this.EAST))\r\n\t\tneighborgs++;\r\n\tif (this.hasNeighborAt(Cell, this.WEST))\r\n\t\tneighborgs++;\r\n\r\n\treturn neighborgs;\r\n};\r\n\r\n\r\n\r\n\r\n\t\r\n\tvar ConwaysLifeGame = {\r\n\r\n\t\tenvironment: null,\r\n\t\tdaysGoBy: null,\r\n\t\trunning: false,\r\n\t\tlifeCycles: 0,\r\n\r\n\t\tsetUp: function() {\r\n\t\t\tConwaysLifeGame.environment = new Environment(50,50, \"#environment\");\r\n\t\t\tConwaysLifeGame.environment.init();\r\n\t\t},\r\n\r\n\t\tstart: function(){\r\n\t\t\tConwaysLifeGame.running = true;\r\n\t\t\tif (ConwaysLifeGame.daysGoBy === null)\r\n\t\t\t\tConwaysLifeGame.daysGoBy = setInterval(function(){\r\n\t\t\t\t\tConwaysLifeGame.executeLifeCicle();\r\n\t\t\t\t}, 500);\r\n\t\t},\r\n\r\n\t\tpause: function(){\r\n\t\t\tConwaysLifeGame.running = false;\r\n\t\t},\r\n\r\n\t\tstop: function(){\r\n\t\t\tclearInterval(ConwaysLifeGame.daysGoBy);\r\n\t\t\tConwaysLifeGame.pause();\r\n\t\t\tConwaysLifeGame.daysGoBy = null;\r\n\t\t},\t\t\r\n\r\n\t\tisNotZeroGeneration: function(){\r\n\t\t\tif(ConwaysLifeGame.lifeCycles > 0)\r\n\t\t\t\treturn true;\r\n\t\t\telse \r\n\t\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\texecuteLifeCicle: function(){\r\n\r\n\t\t\tif( ConwaysLifeGame.running){\r\n\r\n\t\t\t\tif (ConwaysLifeGame.isNotZeroGeneration() )\r\n\t\t\t\t\tConwaysLifeGame.prepareEnvironment();\r\n\r\n\r\n\t\t\t\tvar _env = ConwaysLifeGame.environment;\r\n\t\t\t\tvar cell = null;\r\n\r\n\t\t\t\tvar i, j;\r\n\t\t\t\tfor( i=0; i < _env.fields.length; i++){\r\n\t\t\t\t\tfor( j=0; j < _env.fields[i].length; j++){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcell = _env.getCell(i, j);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(cell.isPopulated()){\r\n\t\t\t\t\t\t\tConwaysLifeGame.evaluatePopulatedCell(cell);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tConwaysLifeGame.evaluateUnpopulatedCell(cell);\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_env.refreshEnvironment();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tConwaysLifeGame.lifeCycles++;\r\n\t\t}, \r\n\r\n\t\tprepareEnvironment: function(){\r\n\t\t\tvar _env = ConwaysLifeGame.environment;\r\n\t\t\tvar cell = null;\r\n\t\t\tvar i, j;\r\n\t\t\tfor( i=0; i < _env.fields.length; i++){\r\n\t\t\t\tfor( j=0; j < _env.fields[i].length; j++){\r\n\t\t\t\t\t\r\n\t\t\t\t\tcell = _env.getCell(i, j);\r\n\r\n\t\t\t\t\tif(cell.isGoner)\r\n\t\t\t\t\t\tcell.setPopulate(false);\r\n\t\t\t\t\telse if (cell.isPregned)\r\n\t\t\t\t\t\tcell.setPopulate(true);\r\n\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tevaluatePopulatedCell: function(cell){\r\n\r\n\r\n\r\n\t\t\tvar neighbors = ConwaysLifeGame.environment.countNeighbors(cell);\r\n   \t\t    \r\n    \tif(neighbors <= 1){// Each cell with one or no neighbors dies, as if by loneliness.\r\n\t\t\t\tcell.willDie();\r\n\t\t\t}else if(neighbors >= 4){\r\n\t\t\t\t// Each cell with four or more neighbors dies, as if by overpopulation.\r\n\t\t\t\tcell.willDie(false);\r\n\t\t\t} \r\n\t\t\t// else Each cell with two or three neighbors survives.\r\n\t\t},\r\n\r\n\t\tevaluateUnpopulatedCell: function(cell){\r\n\t\t\t// Each cell with three neighbors becomes populated.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \t\t   \r\n    \tif(ConwaysLifeGame.environment.countNeighbors(cell) == 3){// Each cell with one or no neighbors dies, as if by loneliness.\r\n\t\t\t\tcell.fertilize();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttogglePopulated: function(x, y){\r\n\t\t\tif (ConwaysLifeGame.environment.getCell(x, y).isPopulated())\r\n\t\t\t\tConwaysLifeGame.environment.getCell(x, y).setPopulate(false);\r\n\t\t\telse\r\n\t\t\t\tConwaysLifeGame.environment.getCell(x, y).setPopulate(true);\r\n\r\n\t\t\tConwaysLifeGame.environment.refreshEnvironment();\r\n\t\t}\r\n\t};\r\n\r\n ```\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}